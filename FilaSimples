#include <stdio.h>
#define TAMANHO 5

typedef struct {
    int intens[TAMANHO];
    int inicio , fim ;
}Fila;

void inicializaFila(Fila *fila) {
fila->inicio = -1;fila->fim = -1;
}
int estaVazia(Fila *fila) {
    return (fila->inicio == -1); // Teste logico retorna 0 ou 1 dependendo do teste
}
int estaCheia(Fila *fila) {
    return (fila->fim == TAMANHO - 1); // Teste logico retorna 0 ou 1 dependendo do teste
}
void enfileira(Fila *fila, int valor) {
    if(estaCheia(fila)) {
        printf("Erro: Fila cheia\n");
    }else {
        if(fila->inicio == -1) {fila->inicio = 0;}
        fila->fim ++;
        fila->intens[fila->fim] = valor;
        printf("Enfileirado  : %d\n" , valor);
    }
    int desenfileirar(Fila *fila) {
        int valor;
        if(estaVazia(fila)) {
            printf("Erro: Fila vazia\n");
            return -1;
        } else {
            valor = fila->intens[fila->fim];
            fila->inicio ++;
            if(fila->inicio > fila->fim) {
                fila->inicio = fila->fim = -1;
            }
            return valor;
        }
    }
    int consultarInicio(Fila*fila) {
        if(estaVazia(fila)) {
            printf("Fila vazia \n");
            return -1;
        }else {
            return fila->intens[fila->inicio] ;

        }
    }

    int main(void)
    {
        Fila fila;
        inicializaFila(&fila);
        enfileira(&fila, 92);
        enfileira(&fila, 82);
        enfileira(&fila, 43);
        enfileira(&fila, 1);
        enfileira(&fila, 15);
        printf("Esse eh o inicio da fila: %d\n " , consultarInicio(&fila));
        desenfileirar(&fila);
        printf("Esse eh o Inicio da fila agora: %d\n" , consultarInicio(&fila));
        return 0;
    }
}
